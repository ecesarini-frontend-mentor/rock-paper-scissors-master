// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Kitty Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

/// Tools

/// Size handler
@mixin size($width, $height: 100%) {
  width: $width;
  height: $height;
  @content;
}

// Background image
@mixin background-img($url, $size: 100%, $args: no-repeat center) {
  background-image: url($url);
  background-size: $size;
  background-repeat: nth($args , 1);
  background-position: nth($args , 2);  
  @content;
}

/// Style border
@mixin border($b-arg, $br-arg) {
  border: nth($b-arg, 1) nth($b-arg, 2) nth($b-arg, 3);
  @if $br-arg {
    $radius-h: nth($br-arg , 1);
    @if length($br-arg) > 1 {
      $radius-h: nth($br-arg, 2);
    }
    border-radius: nth($br-arg, 1) $radius-h;  
  }
  @content;
}

/// Design card
@mixin card {
  display: flex;
  flex-direction: column;
  @content;
}

/// Design button
@mixin button($size, $border-style, $border-radius) {
  @include size(nth($size, 1), nth($size, 2));
  @include border($border-style, $border-radius);

} 

@mixin button-play($url, $border-color) {
  @include button(200px 200px, 20px solid nth($border-color, 2), 50%);
  @include background-img($url, 50%);
  box-shadow: inset 0 $button-play-shadow-size $button-play-shadow-inset, 0 $button-play-shadow-size nth($border-color, 1);
}